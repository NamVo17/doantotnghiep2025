// Frontend: Giao di·ªán chatbot (HTML + CSS + JavaScript)
const chatbotUI = `
    <div id="chatbot-button" onclick="toggleChatbot()">üí¨</div>
    <div id="chat-container">
        <div id="chat-header">Chat v·ªõi ch√∫ng t√¥i</div>
        <div id="chat-box"></div>
        <div id="chat-input">
            <input type="text" id="user-input" placeholder="Nh·∫≠p tin nh·∫Øn...">
            <button onclick="sendMessage()">G·ª≠i</button>
        </div>
    </div>`;
function toggleChatbot() {
        const chatContainer = document.getElementById("chat-container");
        if (chatContainer.style.display === "none" || chatContainer.style.display === "") {
            chatContainer.style.display = "flex";
    
            // Ki·ªÉm tra n·∫øu ch∆∞a c√≥ tin nh·∫Øn ch√†o m·ª´ng th√¨ m·ªõi g·ª≠i
            if (!document.getElementById("chat-box").dataset.welcome) {
                document.getElementById("chat-box").innerHTML += `<p>Sweet Tea House xin ch√†o! Kh√¥ng bi·∫øt ch√∫ng t√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n kh√¥ng?</p>`;
                document.getElementById("chat-box").dataset.welcome = "true"; // ƒê√°nh d·∫•u ƒë√£ g·ª≠i tin nh·∫Øn ch√†o
            }
        } else {
            chatContainer.style.display = "none";
        }
    }
    
    let step = 0; // Tr·∫°ng th√°i b∆∞·ªõc h·ªèi
let chatState = ""; // Tr·∫°ng th√°i chatbot ƒë·ªÉ bi·∫øt ƒëang h·ªèi v·ªÅ th√¥ng tin g√¨
let orderDetails = {}; // L∆∞u th√¥ng tin ƒë·∫∑t h√†ng

function sendMessage() {
    const userInput = document.getElementById("user-input").value.trim();
    if (!userInput) return;

    const chatBox = document.getElementById("chat-box");

    // Hi·ªÉn th·ªã tin nh·∫Øn ng∆∞·ªùi d√πng
    chatBox.innerHTML += `
        <div class="user-container">
            <div class="message user-message">${userInput}</div>
        </div>`;
    document.getElementById("user-input").value = "";

    // Hi·ªÉn th·ªã tr·∫°ng th√°i "ƒëang suy nghƒ©..."
    const botTyping = document.createElement("div");
    botTyping.classList.add("bot-container");
    botTyping.innerHTML = `<div class="message bot-message">...</div>`;
    botTyping.id = "bot-typing";
    chatBox.appendChild(botTyping);
    chatBox.scrollTop = chatBox.scrollHeight;

    setTimeout(() => {
        let botReply = "";

        if (step === 1) {
            orderDetails.price = userInput;
            botReply = "M√¥ t·∫£ h∆∞∆°ng v·ªã b√°nh m√† b·∫°n th√≠ch?üéÇ";
            step = 2;  
        }else if (step === 2) {
            orderDetails.flavor = userInput;
        
            // G·ª≠i d·ªØ li·ªáu l√™n PHP ƒë·ªÉ t√¨m b√°nh ph√π h·ª£p
            fetch("/action/tim_banh.php", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ price: orderDetails.price, flavor: orderDetails.flavor })
            })
            .then(response => response.json())
            .then(data => {
                let reply = "";
                if (data.status === "success") {
                    reply = "D∆∞·ªõi ƒë√¢y l√† c√°c lo·∫°i b√°nh ph√π h·ª£p v·ªõi b·∫°n: <br>";
                    data.data.forEach(banh => {
                        reply += `üéÇ ${banh.name} - ${banh.price}ƒë <br>`;
                    });
                } else {
                    reply = "Xin l·ªói, kh√¥ng t√¨m th·∫•y b√°nh n√†o ph√π h·ª£p v·ªõi s·ªü th√≠ch c·ªßa b·∫°n! üò¢";
                }
        
                chatBox.innerHTML += `
                    <div class="bot-container">
                        <div class="message bot-message">${reply}</div>
                    </div>`;
                chatBox.scrollTop = chatBox.scrollHeight;
            })
            .catch(error => console.error("L·ªói:", error));
        
            step = 0;
        } else if (chatState === "waiting_for_order_details" && step === 3) {
            orderDetails.banh = userInput;
            botReply = "B·∫°n vui l√≤ng cho bi·∫øt t√™n, s·ªë ƒëi·ªán tho·∫°i v√† ƒë·ªãa ch·ªâ ƒë·ªÉ ho√†n t·∫•t ƒë∆°n h√†ng.";
            chatState = "waiting_for_contact_info";
            step = 4;
        } else if (chatState === "waiting_for_contact_info" && step === 4) {
            orderDetails.contact = userInput;
            botReply = "Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c th√¥ng tin! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n ƒë·ªÉ x√°c nh·∫≠n ƒë∆°n h√†ng. üìû";

            // G·ª≠i ƒë∆°n h√†ng l√™n server
            fetch("/action/dathang.php", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(orderDetails)
            }).then(response => response.json())
            .then(data => console.log("ƒê·∫∑t h√†ng th√†nh c√¥ng:", data))
            .catch(error => console.error("L·ªói g·ª≠i ƒë∆°n h√†ng:", error));

            // Reset l·∫°i tr·∫°ng th√°i
            step = 0;
            orderDetails = {};
        } else {
            if (["mua", "gi·ªõi thi·ªáu", "g·ª£i √Ω"].some(keyword => userInput.includes(keyword))) {
                botReply = "B·∫°n mu·ªën t√¨m b√°nh trong t·∫ßm gi√° n√†o?üè∑Ô∏è";
                step = 1;
                botTyping.remove();
                // Hi·ªÉn th·ªã b·∫£ng gi√°
                const questionMessage  = `
                    <div class="bot-container">
                        <div class="message bot-message ">B·∫°n mu·ªën t√¨m b√°nh trong t·∫ßm gi√° n√†o?</div>
                    </div>
                    <div class="bot-container">
                        <div class="message bot-message ">
                            <button class="price-btn" onclick="selectPrice('100k - 200k')">100k - 200k</button>
                            <button class="price-btn" onclick="selectPrice('200k - 300k')">200k - 300k</button>
                            <button class="price-btn" onclick="selectPrice('300k tr·ªü l√™n')">300k tr·ªü l√™n</button>
                        </div>
                    </div>`;
                chatBox.innerHTML += questionMessage; // Hi·ªÉn th·ªã c√¢u h·ªèi tr∆∞·ªõc
                chatBox.scrollTop = chatBox.scrollHeight;
                return;

            } else if (["h∆∞∆°ng v·ªã", "m√¥ t·∫£"].some(keyword => userInput.includes(keyword))) {
                botReply = "M√¥ t·∫£ h∆∞∆°ng v·ªã b√°nh m√† b·∫°n th√≠ch ";
                step = 2;
            } else if (["h·ªó tr·ª£", "gi√∫p", "help"].some(keyword => userInput.includes(keyword))) {
                botReply = "B·∫°n c·∫ßn ch√∫ng t√¥i h·ªó tr·ª£ g√¨? üòä";
            } else if (["m·ªü c·ªßa", "gi·ªù", "l√†m vi·ªác"].some(keyword => userInput.includes(keyword))) {
                botReply = "Th·ªùi gian l√†m vi·ªác 9h - 22h t·ª´ th·ª© 2 ƒë·∫øn ch·ªß nh·∫≠t";
            } else if (["giao h√†ng", "ship", ].some(keyword => userInput.includes(keyword))) {
                    botReply = "Ch√∫ng t√¥i c√≥ nh·∫≠n giao h√†ng nh∆∞ng s·∫Ω t√≠nh ph√≠ nh√© !";
            } else if (["tr·∫£ h√†ng", "ho√†n ti·ªÅn"].some(keyword => userInput.includes(keyword))) {
                botReply = "B·∫°n c√≥ th·ªÉ tr·∫£ h√†ng sau khi nh·∫≠n m√† kh√¥ng v·ª´a √Ω <b>Ch·ªâ tr·∫£ ƒë∆∞·ª£c khi s·∫£n ph·∫©m kh√¥ng b·ªã h∆∞ t·ªïn</b>. B·∫°n s·∫Ω ƒë∆∞·ª£c ho√†n ti·ªÅn khi ch√∫ng t√¥i ki·ªÉm tra l√† b√°nh kh√¥ng c√≥ v·∫•n ƒë·ªÅ!";
            } else if (["khuy·∫øn m√£i", "∆∞u ƒë√£i"].some(keyword => userInput.includes(keyword))) {
                botReply = "Hi·ªán t·∫°i ƒëang c√≥ ch∆∞∆°ng tr√¨nh <b>Mua 2 b√°nh t·∫∑ng 1 n∆∞·ªõc t√πy √Ω</b>. B·∫°n c√≥ mu·ªën ƒë·∫∑t h√†ng ngay kh√¥ng? üéâ";
            } else if (["ƒë·∫∑t", "b√°nh"].some(keyword => userInput.includes(keyword))) {
                botReply = "T·∫•t nhi√™n r·ªìi! B·∫°n ch·ªâ c·∫ßn cho t√¥i bi·∫øt lo·∫°i b√°nh, s·ªü th√≠ch, ƒë·ªô ng·ªçt, gi√° ti·ªÅn... v√† ghi ch√∫ (n·∫øu c√≥). T√¥i s·∫Ω l√†m ngay cho b·∫°n!";
                chatState = "waiting_for_order_details";
                step = 3;
            } else {
                botReply = "Xin l·ªói, t√¥i ch∆∞a hi·ªÉu y√™u c·∫ßu c·ªßa b·∫°n. B·∫°n c√≥ th·ªÉ h·ªèi v·ªÅ ƒë·∫∑t b√°nh, ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i ho·∫∑c gi·ªù m·ªü c·ª≠a nh√©!";
            }
        }

        // X√≥a tr·∫°ng th√°i "ƒëang suy nghƒ©..."
        botTyping.remove();

        // Hi·ªÉn th·ªã tin nh·∫Øn c·ªßa bot
        chatBox.innerHTML += `
            <div class="bot-container">
                <div class="message bot-message">${botReply}</div>
            </div>`;
        chatBox.scrollTop = chatBox.scrollHeight;
    }, 2000);
}
// H√†m x·ª≠ l√Ω khi ch·ªçn m·ª©c gi√°
function selectPrice(price) {
    orderDetails.price = price;

    const chatBox = document.getElementById("chat-box");

    // Hi·ªÉn th·ªã tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng
    chatBox.innerHTML += `
        <div class="user-container">
            <div class="message user-message">${price}</div>
        </div>`;

    // Hi·ªÉn th·ªã tin nh·∫Øn ti·∫øp theo c·ªßa bot
    chatBox.innerHTML += `
        <div class="bot-container">
            <div class="message bot-message">M√¥ t·∫£ h∆∞∆°ng v·ªã b√°nh m√† b·∫°n th√≠ch?üéÇ</div>
        </div>`;

    step = 2;
    chatBox.scrollTop = chatBox.scrollHeight;
}

    
document.body.innerHTML += chatbotUI;
document.getElementById("user-input").addEventListener("keydown", function(event) {
    if (event.key === "Enter") {
        sendMessage();
    }
});

const style = document.createElement('style');
style.innerHTML = `
    #chatbot-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 50px;
            height: 50px;
            background: #d4a373;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            color: white;
            cursor: pointer;
            box-shadow: 2px 2px 10px rgba(0,0,0,0.2);
            z-index: 9999; /* ƒê·∫£m b·∫£o chatbot lu√¥n hi·ªÉn th·ªã tr√™n c√πng */
        }
        #chat-container {
            position: fixed;
            bottom: 80px;
            right: 20px;
            width: 350px;
            background: white;
            border-radius: 10px;
            box-shadow: 2px 2px 10px rgba(0,0,0,0.2);
            display: none;
            flex-direction: column;
            z-index: 9999; /* ƒê·∫£m b·∫£o chatbot lu√¥n hi·ªÉn th·ªã tr√™n c√πng */
        }
        #chat-header {
            background: #d4a373;
            color: white;
            padding: 10px;
            text-align: center;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }
        #chat-box {
            height: 200px;
            overflow-y: auto;
            padding: 10px;
            border-bottom: 1px solid #ccc;
            
        }
        #chat-input {
            display: flex;
            padding: 10px;
        }
        #user-input {
            flex: 1;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        button {
            margin-left: 5px;
            padding: 5px 10px;
            background: #d4a373;
            border: none;
            color: white;
            border-radius: 5px;
            cursor: pointer;
        }
        #chat-box {
            height: 350px;
            overflow-y: auto;
            padding: 10px;
            border-bottom: 1px solid #ccc;
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .message {
            max-width: 80%;
            padding: 8px 12px;
            border-radius: 12px;
            font-size: 14px;
            word-wrap: break-word;
        }

        .user-message {
            align-self: flex-end;
            background: #007bff;
            color: white;
            border-bottom-right-radius: 4px;
        }

        .bot-message {
            align-self: flex-start;
            background: #f1f1f1;
            color: black;
            border-bottom-left-radius: 4px;
        }

        .user-avatar, .bot-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            margin-right: 8px;
        }

        .user-container, .bot-container {
            display: flex;
            align-items: flex-end;
        }

        .user-container {
            justify-content: flex-end;
        }

        .bot-container {
            justify-content: flex-start;
        }
        .price-btn {
            background: #d4a373;
            color: white;
            border: none;
            padding: 5px 10px;
            margin: 5px;
            border-radius: 5px;
            cursor: pointer;
        }
        .price-btn:hover {
            background: #b5835a;
        }


`;
document.head.appendChild(style);
